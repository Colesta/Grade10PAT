/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GameUIManager;

import GameCodeManager.HealthManager;
import GameCodeManager.ManaManager;

/**
 *
 * @author Peters
 */
public class StoryScreen extends javax.swing.JFrame {

    /**
     * Creates new form StoryScreen
     */
    public StoryScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        beginButton = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 51));
        setForeground(new java.awt.Color(255, 51, 0));
        setUndecorated(true);

        beginButton.setBackground(new java.awt.Color(255, 153, 51));
        beginButton.setFont(new java.awt.Font("OCR A Extended", 1, 18)); // NOI18N
        beginButton.setForeground(new java.awt.Color(0, 0, 0));
        beginButton.setText("BEGIN");
        beginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(beginButton)
                .addContainerGap(236, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(203, Short.MAX_VALUE)
                .addComponent(beginButton)
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void beginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beginButtonActionPerformed
        this.setVisible(false);
        new BattleScreen().setVisible(true);
        
        
        //setup for turn system
        BattleScreen.p2Move1.setVisible(false);
        BattleScreen.p2Move2.setVisible(false);
        BattleScreen.p3Move1.setVisible(false);
        BattleScreen.p3Move2.setVisible(false);
        BattleScreen.p4Move1.setVisible(false);
        BattleScreen.p4Move2.setVisible(false);
        BattleScreen.EnemyTurnButton.setVisible(false);
        
        //setup for health and mana bars
        
        
        BattleScreen.p1HP.setMaximum(500);
        BattleScreen.p1HP.setMinimum(0);
        BattleScreen.p1HP.setValue(HealthManager.getPlayerHealth(1));
        BattleScreen.p1M.setMaximum(500);
        BattleScreen.p1M.setMinimum(0);
        BattleScreen.p1M.setValue(ManaManager.getMana(1));
        
        BattleScreen.p2HP.setMaximum(500);
        BattleScreen.p2HP.setMinimum(0);
        BattleScreen.p2HP.setValue(HealthManager.getPlayerHealth(2));
        BattleScreen.p2M.setMaximum(500);
        BattleScreen.p2M.setMinimum(0);
        BattleScreen.p2M.setValue(ManaManager.getMana(2));
        
        BattleScreen.p3HP.setMaximum(500);
        BattleScreen.p3HP.setMinimum(0);
        BattleScreen.p3HP.setValue(HealthManager.getPlayerHealth(3));
        BattleScreen.p3M.setMaximum(500);
        BattleScreen.p3M.setMinimum(0);
        BattleScreen.p3M.setValue(ManaManager.getMana(3));
        
        BattleScreen.p4HP.setMaximum(500);
        BattleScreen.p4HP.setMinimum(0);
        BattleScreen.p4HP.setValue(HealthManager.getPlayerHealth(4));
        BattleScreen.p4M.setMaximum(500);
        BattleScreen.p4M.setMinimum(0);
        BattleScreen.p4M.setValue(ManaManager.getMana(4));
        
        //setup for enemy health
        
        BattleScreen.enemy1HP.setMaximum(500);
        BattleScreen.enemy1HP.setMinimum(0);
        BattleScreen.enemy1HP.setValue(HealthManager.getEnemyHealth(1));
        
        BattleScreen.enemy2HP.setMaximum(500);
        BattleScreen.enemy2HP.setMinimum(0);
        BattleScreen.enemy2HP.setValue(HealthManager.getEnemyHealth(2));
        
        BattleScreen.enemy3HP.setMaximum(500);
        BattleScreen.enemy3HP.setMinimum(0);
        BattleScreen.enemy3HP.setValue(HealthManager.getEnemyHealth(3));
        
        BattleScreen.enemy4HP.setMaximum(500);
        BattleScreen.enemy4HP.setMinimum(0);
        BattleScreen.enemy4HP.setValue(HealthManager.getEnemyHealth(4));
        
        //setting the text over the healthbars
        
        String maxHp1 = HealthManager.maxHeroHp(1)+"";
        String maxM1 = ManaManager.maxMana(1)+"";
        BattleScreen.p1HPtxt.setText(maxHp1 + "/" + maxHp1);
        BattleScreen.p1Mtxt.setText(maxM1 + "/" + maxM1);
        
        String maxHp2 = HealthManager.maxHeroHp(2)+"";
        String maxM2 = ManaManager.maxMana(2)+"";
        BattleScreen.p2HPtxt.setText(maxHp2 + "/" + maxHp2);
        BattleScreen.p2Mtxt.setText(maxM2 + "/" + maxM2);
        
        String maxHp3 = HealthManager.maxHeroHp(3)+"";
        String maxM3 = ManaManager.maxMana(3)+"";
        BattleScreen.p3HPtxt.setText(maxHp3 + "/" + maxHp3);
        BattleScreen.p3Mtxt.setText(maxM3 + "/" + maxM3);
        
        String maxHp4 = HealthManager.maxHeroHp(4)+"";
        String maxM4 = ManaManager.maxMana(4)+"";
        BattleScreen.p4HPtxt.setText(maxHp4 + "/" + maxHp4);
        BattleScreen.p4Mtxt.setText(maxM4 + "/" + maxM4);
        
        String maxEHP1 = HealthManager.maxEnemyHP(1)+"";
        BattleScreen.e1HPtxt.setText(maxEHP1 + "/" + maxEHP1);
        
        String maxEHP2 = HealthManager.maxEnemyHP(2)+"";
        BattleScreen.e2HPtxt.setText(maxEHP2 + "/" + maxEHP2);
        
        String maxEHP3 = HealthManager.maxEnemyHP(3)+"";
        BattleScreen.e3HPtxt.setText(maxEHP3 + "/" + maxEHP3);
        
        String maxEHP4 = HealthManager.maxEnemyHP(4)+"";
        BattleScreen.e4HPtxt.setText(maxEHP4 + "/" + maxEHP4
        );
        
    }//GEN-LAST:event_beginButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void storyScreen(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StoryScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton beginButton;
    private javax.swing.JFrame jFrame1;
    // End of variables declaration//GEN-END:variables
}
